# Builds an almost complete Verdict release
# TBD: push to VERDICT-update-sites too (maybe with copycat-action)

name: Verdict release build

on:
  push:
    branches: [ ci-cd ]
    tags: [ '*' ]

jobs:
  native-binaries:
    strategy:
      matrix:
        ocaml-version: [ 4.07.1 ]
        os: [ macos-10.15, ubuntu-20.04 ]
        include:
          - os: macos-10.15
            zmq_install: brew install zmq
          - os: ubuntu-20.04
            zmq_install: sudo apt-get install -y libzmq3-dev

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out verdict source
      uses: actions/checkout@v2

    - name: Check out kind2 source
      uses: actions/checkout@v2
      with:
        repository: kind2-mc/kind2
        path: tools/verdict-back-ends/kind2

    - name: Cache opam repository
      uses: actions/cache@v2
      with:
        path: ~/.opam
        key: ${{ matrix.os }}-opam-${{ matrix.ocaml-version }}

    - name: Set up OCaml
      uses: avsm/setup-ocaml@v1
      with:
        ocaml-version: ${{ matrix.ocaml-version }}

    - name: Install zmq library
      run: ${{ matrix.zmq_install }}

    - name: Install opam packages
      run: |
        opam install --yes \
          async \
          core \
          core_extended \
          dune \
          dune-build-info \
          menhir \
          ocamlbuild \
          ocamlfind \
          printbox \
          xml-light \
          yojson \
          zmq

    - name: Build aadl2iml
      run: |
        cd tools/verdict-back-ends/aadl2iml
        opam exec make

    - name: Build soteria_pp
      run: |
        cd tools/verdict-back-ends/soteria_pp
        opam exec make

    - name: Build kind2
      run: |
        cd tools/verdict-back-ends/kind2
        opam exec make

    - name: Upload aadl2iml
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-binaries
        path: tools/verdict-back-ends/aadl2iml/bin/aadl2iml

    - name: Upload soteria_pp
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-binaries
        path: tools/verdict-back-ends/soteria_pp/bin/soteria_pp

    - name: Upload kind2
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-binaries
        path: tools/verdict-back-ends/kind2/bin/kind2

  release:
    strategy:
      matrix:
        java-version: [ 8 ]
        os: [ ubuntu-20.04 ]

    needs: native-binaries
    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out source
      uses: actions/checkout@v2

    - name: Set up GraphViz
      uses: ts-graphviz/setup-graphviz@v1

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Cache Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ matrix.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ matrix.os }}-m2

    - name: Run Maven build
      run: mvn -B install -Dtycho.localArtifacts=ignore --file tools/pom.xml
      env:
        GraphVizPath: /usr/bin

    - name: Download mac binaries
      uses: actions/download-artifact@v2
      with:
        name: macos-10.15-binaries
        path: extern/mac

    - name: Download nix binaries
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-20.04-binaries
        path: extern/nix

    - name: Assemble extern folder
      run: |
        mv tools/verdict-back-ends/STEM extern
        mkdir extern/examples
        mv models/CASE_Toy_Models extern/examples
        mv models/DeliveryDrone_CASE_v* extern/examples
        chmod a+x extern/{mac,nix}/{aadl2iml,kind2,soteria_pp}
        cp -a tools/verdict-back-ends/verdict-bundle-parent/verdict-bundle/target/verdict-bundle-1.0.0-SNAPSHOT-capsule.jar extern
        zip -r extern.zip extern
        mkdir tools/verdict-back-ends/{aadl2iml,soteria_pp}/bin
        cp -a extern/nix/aadl2iml tools/verdict-back-ends/aadl2iml/bin
        cp -a extern/nix/soteria_pp tools/verdict-back-ends/soteria_pp/bin

    - name: Upload extern folder
      uses: actions/upload-artifact@v2
      with:
        name: extern.zip
        path: extern.zip

    - name: Build verdict image
      uses: docker/build-push-action@v1
      env:
        DOCKER_BUILDKIT: 1
      with:
        repository: gehighassurance/verdict
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: latest
        tag_with_ref: true
        path: tools/verdict-back-ends
        build_args: BUILDKIT_INLINE_CACHE=1
        cache_froms: gehighassurance/verdict:latest
        push: true
